import * as Path from "path";
import { IPackageOptions } from "./lib/System/PackageSystem/IPackageOptions";
import { ThemeInstructionCollection } from "./lib/System/Customization/Presentation/Themes/ThemeInstructionCollection";
import { RequiredPackageDescriptor } from "./lib/System/PackageSystem/RequiredPackageDescriptor";

function getComponentsPath(value: string): string
{
    return Path.join(__dirname, "components", value);
}

let pkg: IPackageOptions = {
    Identifier: "<%= identifier %>",
    Name: "<%= name %>",
    DisplayName: {
        inv: "<%= displayName %>"
    },
    CreationDate: new Date("<% let date = new Date(); %><%=
        date.getFullYear() + "/" +
        (date.getMonth() + 1).toString().padStart(2, "0") + "/" +
        date.getDate().toString().padStart(2, "0") %>"),
    Description: {
        inv: "<%= description %>"
    },
    InstallSet: {
        Instructions: [<%
            let items = [];

            for (let component of components)
            {
                let optionName = "";
                let item = "";
                let formatter;

                let defaultFormatter = (value) =>
                {
                    return "require(getComponentsPath(\"" + value + "\"))";
                };

                switch (component)
                {
                    case "theme":
                        formatter = (value) =>
                        {
                            return "...new ThemeInstructionCollection(\"" + value + "\")";
                        };
                        break;
                    case "files":
                    case "php":
                    case "sql":
                    case "template":
                    case "acpTemplate":
                        formater = (value) =>
                        {
                            return "// " + defaultFormatter(value);
                        };
                    default:
                        formatter = defaultFormatter;
                        break;
                }

                items.push(formatter(componentPaths[component]));
            }
        %>
            <%- items.join(`,
            `) %>
        ]
    },
    RequiredPackages: [
        new RequiredPackageDescriptor({
            Identifier: "com.woltlab.wcf",
            MinVersion: "3.0.0"
        })
    ]
};

export = pkg;